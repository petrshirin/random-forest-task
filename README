<h1>Тестовое задание по паралельным вычислениям</h1>

<p>Задача: Нужно написать программу способную предсказывать параметр по заданным</p>

<p>Входные данные были следующие</p>
<code>
{"task": 27.0, "x0": "red", "x1": "magenta", "x2": "black", "x3": "red", "x4": "magenta", "x5": "black", "x6": "blue", "x7": "black", "x8": "green", "x9": "white", "x10": "red", "x11": "white", "x12": "green", "x13": "green", "x14": "white", "x15": "red", "x16": "magenta", "x17": "green", "x18": "white", "x19": "green", "y": "white", "i": 0.0},
{"task": 27.0, "x0": "black", "x1": "red", "x2": "red", "x3": "blue", "x4": "white", "x5": "magenta", "x6": "red", "x7": "blue", "x8": "magenta", "x9": "green", "x10": "red", "x11": "red", "x12": "magenta", "x13": "magenta", "x14": "black", "x15": "blue", "x16": "white", "x17": "white", "x18": "magenta", "x19": "green", "y": "green", "i": 1.0
</code>

<p>Для реализации был выбран алгорит построения рандомных деревьев и использовался class:RandomForestClassifier из библиотеки sklearn тк это хорошо подходит для решения данной задачи(задача классификации) и алгоритм </p>

<p>Для перевода слов в числовые значение по быстрому был написан сво токенайзер class:Tokenizer</p>

<p>На выходе мы получили обученое дерево и с его помощью предсказали нужные значения</p>

<p>1.Для обучение использовать файл learn_forest.py</p>
<p>2.Чтобы получить предсказанные данные выдываем файл predict_data.py</p>
<p>Писал на своей рабочей машине, requirements в репозитории есть, вроде использовал только то что нужно. Там также имеются библиотека Keras и связанные с ней, они нигде не используются. изначально хотел решать через рекурсивные нейросети</p>
